==43541== Memcheck, a memory error detector
==43541== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==43541== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==43541== Command: ./a.out images/corrupt-testcases/06-bad-comment-len.ee264 student-out-20_-
==43541== Parent PID: 43540
==43541== 
--43541-- 
--43541-- Valgrind options:
--43541--    --tool=memcheck
--43541--    --leak-check=full
--43541--    --verbose
--43541--    --log-file=memcheck-20.log
--43541-- Contents of /proc/version:
--43541--   Linux version 2.6.32-431.23.3.el6.x86_64 (mockbuild@x86-027.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Wed Jul 16 06:12:23 EDT 2014
--43541-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--43541-- Page sizes: currently 4096, max supported 4096
--43541-- Valgrind library directory: /usr/lib64/valgrind
--43541-- Reading syms from /tmp/.h3jkwG/a.out
--43541-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--43541--    object doesn't have a dynamic symbol table
--43541-- Reading syms from /lib64/ld-2.12.so
--43541--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--43541--   .. build-id is valid
--43541-- Scheduler: using generic scheduler lock implementation.
--43541-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==43541== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-43541-by-desai32-on-ecegrid-thin5.ecn.purdue.edu
==43541== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-43541-by-desai32-on-ecegrid-thin5.ecn.purdue.edu
==43541== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-43541-by-desai32-on-ecegrid-thin5.ecn.purdue.edu
==43541== 
==43541== TO CONTROL THIS PROCESS USING vgdb (which you probably
==43541== don't want to do, unless you know exactly what you're doing,
==43541== or are doing some strange experiment):
==43541==   /usr/lib64/valgrind/../../bin/vgdb --pid=43541 ...command...
==43541== 
==43541== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==43541==   /path/to/gdb ./a.out
==43541== and then give GDB the following command
==43541==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=43541
==43541== --pid is optional if only one valgrind process is running
==43541== 
--43541-- REDIR: 0x398ac17610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--43541-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--43541-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--43541-- REDIR: 0x398ac17480 (index) redirected to 0x4a07c30 (index)
--43541-- REDIR: 0x398ac17500 (strcmp) redirected to 0x4a08570 (strcmp)
--43541-- Reading syms from /lib64/libc-2.12.so
--43541--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--43541--   .. build-id is valid
--43541-- REDIR: 0x398b084cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--43541-- REDIR: 0x398b086f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--43541-- REDIR: 0x398b082c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--43541-- REDIR: 0x398b07f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--43541-- REDIR: 0x398b128420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--43541-- REDIR: 0x398b081120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--43541-- REDIR: 0x398b1336f0 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--43541-- REDIR: 0x398b08aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--43541-- REDIR: 0x398b084500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--43541-- REDIR: 0x398b07b520 (free) redirected to 0x4a063a9 (free)
--43541-- REDIR: 0x398b07a640 (malloc) redirected to 0x4a069ac (malloc)
--43541-- REDIR: 0x398b089670 (memcpy) redirected to 0x4a08b60 (memcpy)
==43541== Warning: set address range perms: large range [0x3aeed040, 0xb96d4ebe) (undefined)
==43541== Invalid write of size 1
==43541==    at 0x4A0A0AC: mempcpy (mc_replace_strmem.c:1268)
==43541==    by 0x398B07166D: _IO_file_xsgetn (fileops.c:1415)
==43541==    by 0x398B067461: fread (iofread.c:44)
==43541==    by 0x400C24: Image_load (answer07.c:63)
==43541==    by 0x40197C: main (<stdin>:61)
==43541==  Address 0x4c3b31f is 1 bytes before a block of size 100 alloc'd
==43541==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==43541==    by 0x400BC0: Image_load (answer07.c:57)
==43541==    by 0x40197C: main (<stdin>:61)
==43541== 
==43541== Syscall param read(buf) points to unaddressable byte(s)
==43541==    at 0x398B0DB5A0: __read_nocancel (syscall-template.S:82)
==43541==    by 0x398B0715E6: _IO_file_xsgetn (fileops.c:1457)
==43541==    by 0x398B067461: fread (iofread.c:44)
==43541==    by 0x400C24: Image_load (answer07.c:63)
==43541==    by 0x40197C: main (<stdin>:61)
==43541==  Address 0x4c3b384 is 0 bytes after a block of size 100 alloc'd
==43541==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==43541==    by 0x400BC0: Image_load (answer07.c:57)
==43541==    by 0x40197C: main (<stdin>:61)
==43541== 
==43541== 
==43541== HEAP SUMMARY:
==43541==     in use at exit: 2,122,219,826 bytes in 4 blocks
==43541==   total heap usage: 4 allocs, 0 frees, 2,122,219,826 bytes allocated
==43541== 
==43541== Searching for pointers to 4 not-freed blocks
==43541== Checked 69,136 bytes
==43541== 
==43541== 24 bytes in 1 blocks are definitely lost in loss record 1 of 4
==43541==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==43541==    by 0x400B08: Image_load (answer07.c:43)
==43541==    by 0x40197C: main (<stdin>:61)
==43541== 
==43541== 100 bytes in 1 blocks are definitely lost in loss record 2 of 4
==43541==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==43541==    by 0x400BC0: Image_load (answer07.c:57)
==43541==    by 0x40197C: main (<stdin>:61)
==43541== 
==43541== 2,122,219,134 bytes in 1 blocks are possibly lost in loss record 4 of 4
==43541==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==43541==    by 0x400B63: Image_load (answer07.c:51)
==43541==    by 0x40197C: main (<stdin>:61)
==43541== 
==43541== LEAK SUMMARY:
==43541==    definitely lost: 124 bytes in 2 blocks
==43541==    indirectly lost: 0 bytes in 0 blocks
==43541==      possibly lost: 2,122,219,134 bytes in 1 blocks
==43541==    still reachable: 568 bytes in 1 blocks
==43541==         suppressed: 0 bytes in 0 blocks
==43541== Reachable blocks (those to which a pointer was found) are not shown.
==43541== To see them, rerun with: --leak-check=full --show-reachable=yes
==43541== 
==43541== ERROR SUMMARY: 76 errors from 5 contexts (suppressed: 6 from 6)
==43541== 
==43541== 1 errors in context 1 of 5:
==43541== Syscall param read(buf) points to unaddressable byte(s)
==43541==    at 0x398B0DB5A0: __read_nocancel (syscall-template.S:82)
==43541==    by 0x398B0715E6: _IO_file_xsgetn (fileops.c:1457)
==43541==    by 0x398B067461: fread (iofread.c:44)
==43541==    by 0x400C24: Image_load (answer07.c:63)
==43541==    by 0x40197C: main (<stdin>:61)
==43541==  Address 0x4c3b384 is 0 bytes after a block of size 100 alloc'd
==43541==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==43541==    by 0x400BC0: Image_load (answer07.c:57)
==43541==    by 0x40197C: main (<stdin>:61)
==43541== 
==43541== 
==43541== 72 errors in context 2 of 5:
==43541== Invalid write of size 1
==43541==    at 0x4A0A0AC: mempcpy (mc_replace_strmem.c:1268)
==43541==    by 0x398B07166D: _IO_file_xsgetn (fileops.c:1415)
==43541==    by 0x398B067461: fread (iofread.c:44)
==43541==    by 0x400C24: Image_load (answer07.c:63)
==43541==    by 0x40197C: main (<stdin>:61)
==43541==  Address 0x4c3b31f is 1 bytes before a block of size 100 alloc'd
==43541==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==43541==    by 0x400BC0: Image_load (answer07.c:57)
==43541==    by 0x40197C: main (<stdin>:61)
==43541== 
--43541-- 
--43541-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--43541-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==43541== 
==43541== ERROR SUMMARY: 76 errors from 5 contexts (suppressed: 6 from 6)
